#!/usr/bin/env ruby

require_relative "../tasks/list_project_issues_task"
require "optparse"

options = {}
project_ids = nil

parser = OptionParser.new do |opts|
  opts.banner = "\nUsage: bin/#{__FILE__} [options]"

  opts.on(
    "-pPROJECTIDS",
    "--project-ids=P1,P2,...",
    "Required. Project IDs to filter (e.g. \"5,7\")"
  ) do |p|
    project_ids = p.split(",").map(&:to_i)
  end

  options[:config_file] = BaseTask::DEFAULT_CONFIG_FILE
  opts.on(
    "-cCONFIGFILE",
    "--config-file=cCONFIGFILE",
    "Config File to use (default: #{options[:config_file]})"
  ) do |c|
    options[:config_file] = c
  end

  opts.on(
    "-sSKIP_COLUMNS",
    "--skip-columns=Col1,Col2,...",
    "Optional. Columns to skip parsing (e.g. \"Shipped,ToDo\")"
  ) do |s|
    options[:skip_columns] = s.split(",")
  end

  opts.on("-v", "--verbose", "Enable verbose output") do
    options[:verbose] = true
  end

  opts.on("-h", "--help", "Prints this help") do
    puts opts
    exit
  end
end

parser.parse!
ListProjectIssuesTask.run!(project_ids, options)
